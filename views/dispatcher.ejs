<div id="mapid">
  <% include ./partials/sidebar-button %>
</div>

<% include ./partials/report-form %>

<style>
  #mapid { height: 100vh; }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  <% if (nag) { %>
    $('.nag').nag('show')
    $('.sidebar').sidebar('toggle')
  <% } %>

  $.post('/get-jwt')
    .then((data) => {
      const token = data.token
      const socket = io.connect('/', {
        query: 'auth_token=' + token
      })

      const mymap = L.map('mapid', {
        zoomControl: false
      }).setView([47.4979, 19.0402], 16)
      L.control.zoom({
        position: 'topright'
      }).addTo(mymap)
      const OpenStreetMap_HOT = L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles courtesy of <a href="http://hot.openstreetmap.org/" target="_blank">Humanitarian OpenStreetMap Team</a>'
      })
      let displayedReports = {}

      OpenStreetMap_HOT.addTo(mymap)

      mymap.on('click', onMapClick)

      socket.on('report created', (report) => {
        createMarker(report)
      })

      socket.on('report updated', (report) => {
        updateMarker(report)
      })

      mymap.locate({setView: true, maxZoom: 16})
      mymap.on('locationfound', onLocationFound)

      function createMarker (report) {
        let latlng = [report.loc.coordinates[1], report.loc.coordinates[0]]
        let popUpText = `
    <div id="${report._id}">
      <h3 class="ui header">
        ${report.address}
      </h3>
      
      <div class="ui list">
        <div class="item">
          <div class="content">
            ${report.notes}
          </div>
        </div>
        
        <div class="item">
          <div class="content">
            <i class="fa fa-phone"></i>
            ${report.reportedBy.contactNo || 'Not provided'}
          </div>
        </div>
        
        <div class="item">
          <div class="content">
            <i class="${report.reportedBy.lang} flag"></i>
            ${report.reportedBy.name}
          </div>
        </div>
        
        <div class="item">
          <div class="content">
            <div class="three ui buttons">
              <button class="ui red button set-priority">Urgent</button>
              <button class="ui yellow button set-priority">Moderate</button>
              <button class="ui green button set-priority">Low</button>
            </div>
          </div>
        </div>
        
        <% if (user) { %>
          <% if (user.roles.indexOf('dispatcher') > -1) { %>
            <div class="item">
              <div class="content">
                <a class="ui yellow right labeled icon button fluid dispatch">
                  <i class="emergency icon"></i>
                  Dispatch
                </a>
              </div>
            </div>
          <% } %>
        
          <% if (user.roles.indexOf('crisisCar') > -1) { %>
            <div class="item">
              <div class="content">
                <a class="ui green right labeled icon button fluid set-attended">
                  <i class="checkmark icon"></i>
                  Attended
                </a>
              </div>
            </div>
          <% } %>
        <% } %>
        
        <div class="item">
          <div class="content">
            <a class="ui red right labeled icon button fluid remove-pin">
              <i class="remove circle icon"></i>
              Remove
            </a>
          </div>
        </div>

      </div>
    </div>`
        dropPin(latlng, popUpText, report.type, report.priority, report._id)
      }

      $('#mapid').on('click', '.remove-pin', (e) => {
        removeFromMap($(e.target).parent().parent().parent().parent().attr('id'))
      })

      $('#mapid').on('click', '.set-attended', (e) => {
        socket.emit('attended', $(e.target).parent().parent().parent().parent().attr('id'))
      })

      $('#mapid').on('click', '.dispatch', (e) => {
        socket.emit('dispatch', $(e.target).parent().parent().parent().parent().attr('id'))
      })

      $('#mapid').on('click', '.set-priority', (e) => {
        let payload = {}
        let el = $(e.target)
        if (el.hasClass('red')) {
          payload.priority = 1
        } else if (el.hasClass('yellow')) {
          payload.priority = 2
        } else {
          payload.priority = 3
        }
        payload.id = el.parent().parent().parent().parent().parent().attr('id')
        socket.emit('priority change', payload)
      })

      function removeFromMap (id) {
        displayedReports[id].removeFrom(mymap)
        displayedReports[id] = null
        socket.emit('removed report', id)
      }

      function onMapClick (e) {
        fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${e.latlng.lat},${e.latlng.lng}`)
          .then((response) => response.json())
          .then((addressData) => {
            let address = addressData.results[0].formatted_address
            mymap.flyTo(e.latlng, 18)
            $('#address').val(address)
            $('#lat').val(e.latlng.lat)
            $('#lng').val(e.latlng.lng)
            $('.modal').modal({
              onDeny: function () {
                $('#address').val('')
                $('#lat').val('')
                $('#lng').val('')
                $('#notes').val('')
              },
              onApprove: function () {
                const payload = {
                  notes: $('#notes').val(),
                  lat: $('#lat').val(),
                  lng: $('#lng').val()
                }
                if (payload.notes && payload.lat && payload.lng) {
                  socket.emit('new report', payload)
                  $('#address').val('')
                  $('#lat').val('')
                  $('#lng').val('')
                  $('#notes').val('')
                } else {
                  console.log("Couldn't read all fields :(")
                  return false
                }
              }
            }).modal('show')
          })
      }

      function updateMarker (newData) {
        removeFromMap(newData._id)
        createMarker(newData)
      }

      function dropPin (latlng, dataString, type, prio, id, bounce) {
        let priorityColour = ''
        let iconString = ''
        switch (prio) {
          case 1:
            priorityColour = 'red'
            break
          case 2:
            priorityColour = 'orange'
            break
          case 3:
            priorityColour = 'green'
            break
          default:
            priorityColour = 'purple'
        }
        switch (type) {
          case 0:
            iconString = 'question-circle'
            break
          case 1:
            iconString = 'info-circle'
            break
          case 2:
            iconString = 'ambulance'
            break
          case 3:
            iconString = 'check'
            break
          default:
            iconString = 'question-circle'
        }
        let newPin = L.marker(latlng, {icon: pinDesigner(priorityColour, iconString)}).addTo(mymap).bounce(1)
          .bindPopup(dataString)
        displayedReports[id] = newPin
      }

      function pinDesigner (colour, icon) {
        return L.AwesomeMarkers.icon({
          prefix: 'fa',
          icon: icon,
          markerColor: colour
        })
      }

      function onLocationFound (e) {
        var radius = e.accuracy / 2
        L.marker(e.latlng, {icon: pinDesigner('green', 'user')}).addTo(mymap)
        L.circle(e.latlng, radius).addTo(mymap)
        mymap.flyTo(e.latlng, 18)
      }
    })
    .catch((err) => {
      console.log(err)
      const mymap = L.map('mapid', {
        zoomControl: false
      }).setView([47.4979, 19.0402], 16)

      L.control.zoom({
        position: 'topright'
      }).addTo(mymap)

      const OpenStreetMap_HOT = L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles courtesy of <a href="http://hot.openstreetmap.org/" target="_blank">Humanitarian OpenStreetMap Team</a>'
      })

      OpenStreetMap_HOT.addTo(mymap)
    })
})

</script>